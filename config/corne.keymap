/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp Q  &kp W  &kp E             &kp R                &kp T           &kp Y        &kp U                 &kp I             &kp O              &kp P
  &kp A  &kp S  &kp D             &kp F                &kp G           &kp H        &kp J                 &kp K             &kp L              &kp GRAVE
  &kp Z  &kp X  &kp C             &kp V                &kp B           &kp N        &kp M                 &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
                &kp LEFT_COMMAND  &mt LCTRL BACKSPACE  &lt 1 ESCAPE    &lt 2 ENTER  &mt LEFT_SHIFT SPACE  &kp GLOBE
            >;
        };

        navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &sys_reset    &none         &none             &none           &none                     &kp ESCAPE     &kp HOME  &kp UP_ARROW  &kp END      &kp BACKSPACE
  &sk LCTRL     &sk LEFT_ALT  &sk LEFT_COMMAND  &sk LEFT_SHIFT  &sk LC(RA(LEFT_SHIFT))    &kp PAGE_UP    &kp LEFT  &kp DOWN      &kp RIGHT    &kp TAB
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_PRV      &bt BT_NXT                &kp PAGE_DOWN  &kp DEL   &kp K_COPY    &kp K_PASTE  &kp LA(BACKSPACE)
                              &trans            &sl 1           &none                     &lt 3 ENTER    &trans    &trans
            >;
        };

        coding {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp LS(EXCL)  &kp LS(PLUS)  &kp LS(LBRC)  &kp LS(RBRC)  &kp LS(STAR)     &kp LS(CARET)  &kp LS(TILDE)  &kp EQUAL  &kp BSLH  &kp LS(PRCNT)
  &kp LS(AMPS)  &kp LS(DLLR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(QMARK)    &kp LS(DQT)    &kp SQT        &kp COMMA  &kp DOT   &kp SEMI
  &kp LS(PIPE)  &kp MINUS     &kp LS(LT)    &kp LS(GT)    &kp FSLH         &kp LS(COLON)  &kp LS(UNDER)  &kp LBKT   &kp RBKT  &kp LS(POUND)
                              &trans        &trans        &lt 3 SPACE      &none          &sl 2          &trans
            >;
        };

        numbers {
            bindings = <
  &trans     &trans        &trans            &kp PLUS        &kp ASTERISK              &kp ESCAPE      &mt F7 N7        &mt F8 N8        &mt F9 N9        &kp BACKSPACE
  &sk LCTRL  &sk LEFT_ALT  &sk LEFT_COMMAND  &sk LEFT_SHIFT  &sk LA(LC(LEFT_SHIFT))    &mt F11 COMMA   &mt F4 NUMBER_4  &mt F5 N5        &mt F6 NUMBER_6  &mt F10 N0
  &trans     &trans        &trans            &kp MINUS       &kp SLASH                 &mt F12 PERIOD  &mt F1 NUMBER_1  &mt F2 NUMBER_2  &mt F3 NUMBER_3  &kp ENTER
                           &trans            &sl 3           &none                     &none           &sl 3            &trans
            >;
        };
    };
};
